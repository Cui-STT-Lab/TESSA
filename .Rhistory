library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
sum(object@result$lineage1$Test1$pvs_adj < 0.0001)
sum(object@result$lineage1$Test1$pvs_adj < 0.001)
sum(object@result$lineage1$Test1$pvs_adj < 0.01)
object@result$lineage1$Test1$pvs_adj
object@result$lineage1$Test1$
object@result$lineage1$Test1
object@result$lineage1$Test1
head(object@result$lineage1$Test1)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
sum(object@result$lineage1$Test1$pvs_adj < 0.01)
head(Tessa.obj@result$lineage1$Test1)
sum( Tessa.obj@result$lineage1$Test1$pvs_adj < 0.01)
sum( Tessa.obj@result$lineage1$Test1$pvs_adj < 0.001)
sum( Tessa.obj@result$lineage1$Test1$pvs_adj < 0.0001)
sum( Tessa.obj@result$lineage1$Test1$pvs_adj < 0.00001)
sum( Tessa.obj@result$lineage1$Test1$pvs_adj < 0.000001)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.000001)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.000001)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.000001)
)
str(Tessa.obj)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0001)
)
str(Tessa.obj)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0001)
)
str(Tessa.obj)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj < 0.0001)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj_LOO < 0.0001)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.001)
)
str(Tessa.obj)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj < 0.0001)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj_LOO < 0.0001)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj < thres)
thres= 0.001
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj < thres)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj_LOO < thres)
sum( Tessa.obj@result[['lineage2']]$Test1$pvs_adj < thres)
sum( Tessa.obj@result[['lineage2']]$Test1$pvs_adj_LOO < thres)
thres= 0.001
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.01)
)
str(Tessa.obj)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj < thres)
sum( Tessa.obj@result[['lineage1']]$Test1$pvs_adj_LOO < thres)
sum( Tessa.obj@result[['lineage2']]$Test1$pvs_adj < thres)
sum( Tessa.obj@result[['lineage2']]$Test1$pvs_adj_LOO < thres)
object =Tessa.obj
str(object)
test_res <- object@result[[lineage]]$Test1
lineage ='lineage1'
test_res <- object@result[[lineage]]$Test1
DP_genes <- intersect(object@signature_genes, test_res$geneid[test_res$test1_pvs_adj < LOO_pv_threshold])
DP_genes
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
unlink("NAMESPACE")
devtools::document()
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
thres= 0.001
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.01)
)
str(Tessa.obj)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.05)
)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0005)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0005)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0005)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = TRUE,  LOO_pv_threshold = 0.0005)
)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE,  LOO_pv_threshold = 0.0005)
)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::install()
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
## test Tessa object
library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
head(meta_df)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
str(Tessa.obj )
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
Tessa.obj = build_kernelMatrix(Tessa.obj)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
Tessa.obj
str(Tessa.obj)
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
Tessa.obj = build_kernelMatrix(Tessa.obj)
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
# devtools::install()
## test Tessa object
# library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
# devtools::install()
## test Tessa object
# library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
str(Tessa.obj)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
# devtools::install()
## test Tessa object
# library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
# devtools::install()
## test Tessa object
# library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
# devtools::install()
## test Tessa object
# library(TESSA)
counts = seu.obj[['Spatial']]$counts
meta_df = data.frame(x = seu.obj@images[[1]]@coordinates$row,
y = seu.obj@images[[1]]@coordinates$col,
lineage1 = seu.obj$slingshot_t1,
lineage2 = seu.obj$slingshot_t2
)
Tessa.obj =  CreateTessaObject(counts = counts, meta_df = meta_df,
signature_genes = mkgenes,
covariates = NULL, normalized = FALSE)
Tessa.obj = data_preprocess(object = Tessa.obj)
Tessa.obj = build_kernelMatrix(Tessa.obj)
Tessa.obj
#! debug
system.time(
Tessa.obj <-  run_Test1(Tessa.obj, LOO = FALSE)
)
